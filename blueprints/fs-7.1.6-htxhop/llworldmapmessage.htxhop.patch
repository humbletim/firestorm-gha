diff --git a/indra/newview/llnavigationbar.cpp b/indra/newview/llnavigationbar.cpp
index ce1064e789..9d07a7db3e 100644
--- a/indra/newview/llnavigationbar.cpp
+++ b/indra/newview/llnavigationbar.cpp
@@ -661,7 +661,10 @@ void LLNavigationBar::onLocationSelection()
 			&LLNavigationBar::onRegionNameResponse, this,
 			typed_location, region_name, local_coords, _1, _2, _3, _4);
 	mSaveToLocationHistory = true;
-	LLWorldMapMessage::getInstance()->sendNamedRegionRequest(region_name, cb, std::string("unused"), false);
+	// <FS:HT> Exacting Region Lookups
+	region_name = "="+region_name;
+	// </FS:HT> Exacting Region Lookups
+	LLWorldMapMessage::getInstance()->sendNamedRegionRequest(region_name, cb, std::string("navigationbar"), false);
 }
 
 void LLNavigationBar::onTeleportFailed()
diff --git a/indra/newview/llurldispatcher.cpp b/indra/newview/llurldispatcher.cpp
index 97dc513583..e5c3bfd52c 100644
--- a/indra/newview/llurldispatcher.cpp
+++ b/indra/newview/llurldispatcher.cpp
@@ -263,6 +263,9 @@ bool LLURLDispatcherImpl::dispatchRegion(const LLSLURL& slurl, const std::string
 #endif //OPENSIM
 // </FS:AW optional opensim support>
 	// Request a region handle by name
+	// <FS:HT> Exacting Region Lookups
+	oSLURL = LLSLURL("=" + oSLURL.getRegion(), oSLURL.getPosition(), oSLURL.getHypergrid());
+	// </FS:HT> Exacting Region Lookups
 	LLWorldMapMessage::getInstance()->sendNamedRegionRequest(oSLURL.getRegion(), LLURLDispatcherImpl::regionNameCallback, slurl.getSLURLString(), LLUI::getInstance()->mSettingGroups["config"]->getBOOL("SLURLTeleportDirectly"));	// don't teleport
 	return true;
 }
diff --git a/indra/newview/llworldmapmessage.cpp b/indra/newview/llworldmapmessage.cpp
index ace4f61667..7c62cedd51 100644
--- a/indra/newview/llworldmapmessage.cpp
+++ b/indra/newview/llworldmapmessage.cpp
@@ -106,6 +106,13 @@ void LLWorldMapMessage::sendNamedRegionRequest(std::string region_name,
 	mSLURLCallback = callback;
 	mSLURLTeleport = teleport;
 
+	// <FS:HT> Exacting Region Lookups
+	if (region_name.size() && region_name[0] == '=') {
+		_LLWorldMapMessage_sendExactNamedRegionRequest(_RegionNameQuery_from(this));
+		return;
+	}
+	// </FS:HT> Exacting Region Lookups
+
 	sendNamedRegionRequest(region_name);
 }
 
@@ -164,6 +171,9 @@ void LLWorldMapMessage::processMapBlockReply(LLMessageSystem* msg, void**)
 	// There's only one flag that we ever use here
 	if (agent_flags != LAYER_FLAG)
 	{
+// <FS:HT> Exacting Region Lookups
+		if (LLWorldMapMessage_processExactNamedRegionResponse(_RegionNameQuery_from(LLWorldMapMessage::getInstance()), msg, agent_flags)) return;
+// <FS:HT> Exacting Region Lookups
 		LL_WARNS() << "Invalid map image type returned! layer = " << agent_flags << LL_ENDL;
 		return;
 	}
