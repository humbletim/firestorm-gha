name: CompileWindows

on:
  # pull_request:
  workflow_dispatch:
      inputs:
        fstuple:
          type: choice
          description: fstuple
          default: base=6.6.17 repo=FirestormViewer/phoenix-firestorm branch=Firestorm_6.6.17
          options:
            - base=6.6.17 repo=FirestormViewer/phoenix-firestorm branch=Firestorm_6.6.17
            - base=7.1.2 repo=FirestormViewer/phoenix-firestorm-alpha branch=master

defaults:
  run:
    shell: bash

jobs:
  windows_build:
    runs-on: windows-2022
    steps:
    - name: Output Inputs
      run: echo "${{ toJSON(github.event.inputs) }}"

    - name: Tools
      run: |
        curl -L -o ninja-win.zip https://github.com/ninja-build/ninja/releases/download/v1.10.2/ninja-win.zip
        unzip -d humbletim-bin ninja-win.zip
        echo "${GITHUB_WORKSPACE}/humbletim-bin" | tee -a $GITHUB_PATH
        cp -avu C:/msys64/usr/bin/wget.exe humbletim-bin/
        #pacman -S parallel --noconfirm --quiet || _die "could not install parallel with pacman"
        #wget https://mirror.msys2.org/msys/x86_64/parallel-20231122-1-any.pkg.tar.zst.sig
        wget https://mirror.msys2.org/msys/x86_64/parallel-20231122-1-any.pkg.tar.zst
        echo '3f9a262cdb7ba9b21c4aa2d6d12e6ccacbaf6106085fdaafd3b8a063e15ea782 *parallel-20231122-1-any.pkg.tar.zst' | sha256sum.exe -c
        tar -C humbletim-bin -xvf parallel-20231122-1-any.pkg.tar.zst --strip-components=2 usr/bin/parallel
        mkdir -p ~/.parallel/tmp/sshlogin/`hostname`
        echo 65535 > ~/.parallel/tmp/sshlogin/`hostname`/linelen

    - name: Preflight
      shell: bash
      run: |
        bash --version | head -1
        python --version | head -1
        ninja --version | head -1
        wget --version | head -1
        parallel --version | head -1

    - name: Clone
      run: |
        pwd && pwd -W
        set -x
        function fastclone() { git clone --quiet --recurse-submodules --filter=tree:0 https://github.com/$1.git --branch $2 $3 ; }
        #fastclone FirestormViewer/phoenix-firestorm ${GITHUB_REF_NAME/_VR/} ${GITHUB_WORKSPACE}
        eval `${{inputs.fstuple}} ; {
          echo _fsbase=$base
          echo _fsrepo=$repo
          echo _fsbranch=$branch
          echo nunja_dir=$(pwd -W)/fsvr/$base
          echo p373r_dir=$(pwd -W)/p373r-vrmod
        } | tee -a $GITHUB_ENV`
        fastclone ${_fsrepo} ${_fsbranch} ${GITHUB_WORKSPACE}
        fastclone FirestormViewer/fs-build-variables master
        fastclone ${GITHUB_REPOSITORY} ${GITHUB_REF_NAME} fsvr
        fastclone ${GITHUB_REPOSITORY} P373R_6.6.8 $p373r_dir
        ls -lrtha
        ls -lrtha fsvr/

    # - name: Setup tmate session
    #   uses: mxschmitt/action-tmate@v3
    #   with:
    #     limit-access-to-actor: true

    - name: Nunja Mapping
      run: |
        mkdir -pv build
        eval `echo nunja_dir=fsvr/$_fsbase | tee -a $GITHUB_ENV`
        ./fsvr/util/generate_build_vars.sh Firestorm-VR-GHA `cat $nunja_dir/viewer_version.txt` build/ | tee build/build_vars.env | tee $GITHUB_ENV

    # - name: Setup tmate session
    #   uses: mxschmitt/action-tmate@v3
    #   with:
    #     limit-access-to-actor: true

    - name: 001_ensure_build_directories
      run: ./fsvr/util/build.sh 001_ensure_build_directories 

    - name: 002_perform_replacements
      run: ./fsvr/util/build.sh 002_perform_replacements

    - name: 003_prepare_msys_msvc
      run: ./fsvr/util/build.sh 003_prepare_msys_msvc

    - name: 004_generate_package_infos
      run: ./fsvr/util/build.sh 004_generate_package_infos

    - name: 005_generate_packages_info_text
      run: ./fsvr/util/build.sh 005_generate_packages_info_text

    - name: 006_download_packages
      run: ./fsvr/util/build.sh 006_download_packages

    - name: 007_verify_downloads
      run: ./fsvr/util/build.sh 007_verify_downloads

    - name: 008_untar_packages
      run: ./fsvr/util/build.sh 008_untar_packages

    - name: 009_ninja_preflight
      run: ./fsvr/util/build.sh 009_ninja_preflight
# 
#     - name: 00a_ninja_build
#       run: ./fsvr/util/build.sh 00a_ninja_build
# 
#     - name: 00b_bundle
#       run: ./fsvr/util/build.sh 00b_bundle

    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true
